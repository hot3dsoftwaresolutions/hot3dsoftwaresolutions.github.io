"use strict";(self.webpackChunkng=self.webpackChunkng||[]).push([[309],{309:(ft,He,Ne)=>{Ne.r(He),Ne.d(He,{createInstance:()=>lt});var i=Ne(560);const Ve={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor.a *= opacity;\n\n\n\t\t}"};class _e{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const tt=new i.iKG(-1,1,1,-1,0,1),Ue=new i.u9r;Ue.setAttribute("position",new i.a$l([-1,3,0,-1,-1,0,3,-1,0],3)),Ue.setAttribute("uv",new i.a$l([0,2,0,0,2,0],2));class Qe{constructor(e){this._mesh=new i.Kj0(Ue,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,tt)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Xe extends _e{constructor(e,s){super(),this.textureID=void 0!==s?s:"tDiffuse",e instanceof i.jyz?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=i.rDY.clone(e.uniforms),this.material=new i.jyz({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Qe(this.material)}render(e,s,t){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=t.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(s),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}class Ke extends _e{constructor(e,s){super(),this.scene=e,this.camera=s,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,s,t){const r=e.getContext(),o=e.state;let n,c;o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(n=0,c=1):(n=1,c=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),o.buffers.stencil.setFunc(r.ALWAYS,n,4294967295),o.buffers.stencil.setClear(c),o.buffers.stencil.setLocked(!0),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(s),this.clear&&e.clear(),e.render(this.scene,this.camera),o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(r.EQUAL,1,4294967295),o.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),o.buffers.stencil.setLocked(!0)}}class st extends _e{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class it{constructor(e,s){if(this.renderer=e,void 0===s){const t=e.getSize(new i.FM8);this._pixelRatio=e.getPixelRatio(),this._width=t.width,this._height=t.height,(s=new i.dd2(this._width*this._pixelRatio,this._height*this._pixelRatio)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=s.width,this._height=s.height;this.renderTarget1=s,this.renderTarget2=s.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===Ve&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===Xe&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Xe(Ve),this.clock=new i.SUY}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,s){this.passes.splice(s,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const s=this.passes.indexOf(e);-1!==s&&this.passes.splice(s,1)}isLastEnabledPass(e){for(let s=e+1;s<this.passes.length;s++)if(this.passes[s].enabled)return!1;return!0}render(e){void 0===e&&(e=this.clock.getDelta());const s=this.renderer.getRenderTarget();let t=!1;for(let r=0,o=this.passes.length;r<o;r++){const n=this.passes[r];if(!1!==n.enabled){if(n.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),n.render(this.renderer,this.writeBuffer,this.readBuffer,e,t),n.needsSwap){if(t){const c=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(c.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(c.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==Ke&&(n instanceof Ke?t=!0:n instanceof st&&(t=!1))}}this.renderer.setRenderTarget(s)}reset(e){if(void 0===e){const s=this.renderer.getSize(new i.FM8);this._pixelRatio=this.renderer.getPixelRatio(),this._width=s.width,this._height=s.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,s){this._width=e,this._height=s;const t=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(t,r),this.renderTarget2.setSize(t,r);for(let o=0;o<this.passes.length;o++)this.passes[o].setSize(t,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new i.iKG(-1,1,1,-1,0,1);const Le=new i.u9r;Le.setAttribute("position",new i.a$l([-1,3,0,-1,-1,0,3,-1,0],3)),Le.setAttribute("uv",new i.a$l([0,2,0,0,2,0],2));class at extends _e{constructor(e,s,t,r,o){super(),this.scene=e,this.camera=s,this.overrideMaterial=t,this.clearColor=r,this.clearAlpha=void 0!==o?o:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new i.Ilk}render(e,s,t){const r=e.autoClear;let o,n;e.autoClear=!1,void 0!==this.overrideMaterial&&(n=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),o=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,o),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=n),e.autoClear=r}}const We={type:"change"},Ye={type:"start"},qe={type:"end"};class ot extends i.pBf{constructor(e,s){super(),void 0===s&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),s===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=s,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new i.Pa4,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:i.RsA.ROTATE,MIDDLE:i.RsA.DOLLY,RIGHT:i.RsA.PAN},this.touches={ONE:i.QmN.ROTATE,TWO:i.QmN.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(a){a.addEventListener("keydown",Pe),this._domElementKeyEvents=a},this.saveState=function(){t.target0.copy(t.target),t.position0.copy(t.object.position),t.zoom0=t.object.zoom},this.reset=function(){t.target.copy(t.target0),t.object.position.copy(t.position0),t.object.zoom=t.zoom0,t.object.updateProjectionMatrix(),t.dispatchEvent(We),t.update(),o=r.NONE},this.update=function(){const a=new i.Pa4,m=(new i._fP).setFromUnitVectors(e.up,new i.Pa4(0,1,0)),O=m.clone().invert(),B=new i.Pa4,Q=new i._fP,ne=2*Math.PI;return function(){const Ee=t.object.position;a.copy(Ee).sub(t.target),a.applyQuaternion(m),c.setFromVector3(a),t.autoRotate&&o===r.NONE&&M(function N(){return 2*Math.PI/60/60*t.autoRotateSpeed}()),t.enableDamping?(c.theta+=l.theta*t.dampingFactor,c.phi+=l.phi*t.dampingFactor):(c.theta+=l.theta,c.phi+=l.phi);let U=t.minAzimuthAngle,Y=t.maxAzimuthAngle;return isFinite(U)&&isFinite(Y)&&(U<-Math.PI?U+=ne:U>Math.PI&&(U-=ne),Y<-Math.PI?Y+=ne:Y>Math.PI&&(Y-=ne),c.theta=U<=Y?Math.max(U,Math.min(Y,c.theta)):c.theta>(U+Y)/2?Math.max(U,c.theta):Math.min(Y,c.theta)),c.phi=Math.max(t.minPolarAngle,Math.min(t.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(t.minDistance,Math.min(t.maxDistance,c.radius)),!0===t.enableDamping?t.target.addScaledVector(x,t.dampingFactor):t.target.add(x),a.setFromSpherical(c),a.applyQuaternion(O),Ee.copy(t.target).add(a),t.object.lookAt(t.target),!0===t.enableDamping?(l.theta*=1-t.dampingFactor,l.phi*=1-t.dampingFactor,x.multiplyScalar(1-t.dampingFactor)):(l.set(0,0,0),x.set(0,0,0)),h=1,!!(w||B.distanceToSquared(t.object.position)>n||8*(1-Q.dot(t.object.quaternion))>n)&&(t.dispatchEvent(We),B.copy(t.object.position),Q.copy(t.object.quaternion),w=!1,!0)}}(),this.dispose=function(){t.domElement.removeEventListener("contextmenu",pe),t.domElement.removeEventListener("pointerdown",he),t.domElement.removeEventListener("pointercancel",ae),t.domElement.removeEventListener("wheel",Ie),t.domElement.removeEventListener("pointermove",we),t.domElement.removeEventListener("pointerup",fe),null!==t._domElementKeyEvents&&t._domElementKeyEvents.removeEventListener("keydown",Pe)};const t=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let o=r.NONE;const n=1e-6,c=new i.$V,l=new i.$V;let h=1;const x=new i.Pa4;let w=!1;const P=new i.FM8,p=new i.FM8,v=new i.FM8,b=new i.FM8,C=new i.FM8,f=new i.FM8,S=new i.FM8,z=new i.FM8,E=new i.FM8,y=[],F={};function _(){return Math.pow(.95,t.zoomSpeed)}function M(a){l.theta-=a}function R(a){l.phi-=a}const I=function(){const a=new i.Pa4;return function(O,B){a.setFromMatrixColumn(B,0),a.multiplyScalar(-O),x.add(a)}}(),A=function(){const a=new i.Pa4;return function(O,B){!0===t.screenSpacePanning?a.setFromMatrixColumn(B,1):(a.setFromMatrixColumn(B,0),a.crossVectors(t.object.up,a)),a.multiplyScalar(O),x.add(a)}}(),j=function(){const a=new i.Pa4;return function(O,B){const Q=t.domElement;if(t.object.isPerspectiveCamera){a.copy(t.object.position).sub(t.target);let ye=a.length();ye*=Math.tan(t.object.fov/2*Math.PI/180),I(2*O*ye/Q.clientHeight,t.object.matrix),A(2*B*ye/Q.clientHeight,t.object.matrix)}else t.object.isOrthographicCamera?(I(O*(t.object.right-t.object.left)/t.object.zoom/Q.clientWidth,t.object.matrix),A(B*(t.object.top-t.object.bottom)/t.object.zoom/Q.clientHeight,t.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),t.enablePan=!1)}}();function $(a){t.object.isPerspectiveCamera?h/=a:t.object.isOrthographicCamera?(t.object.zoom=Math.max(t.minZoom,Math.min(t.maxZoom,t.object.zoom*a)),t.object.updateProjectionMatrix(),w=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),t.enableZoom=!1)}function X(a){t.object.isPerspectiveCamera?h*=a:t.object.isOrthographicCamera?(t.object.zoom=Math.max(t.minZoom,Math.min(t.maxZoom,t.object.zoom/a)),t.object.updateProjectionMatrix(),w=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),t.enableZoom=!1)}function se(a){P.set(a.clientX,a.clientY)}function ce(a){b.set(a.clientX,a.clientY)}function ze(){1===y.length?P.set(y[0].pageX,y[0].pageY):P.set(.5*(y[0].pageX+y[1].pageX),.5*(y[0].pageY+y[1].pageY))}function ue(){1===y.length?b.set(y[0].pageX,y[0].pageY):b.set(.5*(y[0].pageX+y[1].pageX),.5*(y[0].pageY+y[1].pageY))}function ie(){const a=y[0].pageX-y[1].pageX,m=y[0].pageY-y[1].pageY,O=Math.sqrt(a*a+m*m);S.set(0,O)}function K(a){if(1==y.length)p.set(a.pageX,a.pageY);else{const O=J(a);p.set(.5*(a.pageX+O.x),.5*(a.pageY+O.y))}v.subVectors(p,P).multiplyScalar(t.rotateSpeed);const m=t.domElement;M(2*Math.PI*v.x/m.clientHeight),R(2*Math.PI*v.y/m.clientHeight),P.copy(p)}function te(a){if(1===y.length)C.set(a.pageX,a.pageY);else{const m=J(a);C.set(.5*(a.pageX+m.x),.5*(a.pageY+m.y))}f.subVectors(C,b).multiplyScalar(t.panSpeed),j(f.x,f.y),b.copy(C)}function ke(a){const m=J(a),O=a.pageX-m.x,B=a.pageY-m.y,Q=Math.sqrt(O*O+B*B);z.set(0,Q),E.set(0,Math.pow(z.y/S.y,t.zoomSpeed)),$(E.y),S.copy(z)}function he(a){!1!==t.enabled&&(0===y.length&&(t.domElement.setPointerCapture(a.pointerId),t.domElement.addEventListener("pointermove",we),t.domElement.addEventListener("pointerup",fe)),function Be(a){y.push(a)}(a),"touch"===a.pointerType?function me(a){switch(oe(a),y.length){case 1:switch(t.touches.ONE){case i.QmN.ROTATE:if(!1===t.enableRotate)return;ze(),o=r.TOUCH_ROTATE;break;case i.QmN.PAN:if(!1===t.enablePan)return;ue(),o=r.TOUCH_PAN;break;default:o=r.NONE}break;case 2:switch(t.touches.TWO){case i.QmN.DOLLY_PAN:if(!1===t.enableZoom&&!1===t.enablePan)return;(function T(){t.enableZoom&&ie(),t.enablePan&&ue()})(),o=r.TOUCH_DOLLY_PAN;break;case i.QmN.DOLLY_ROTATE:if(!1===t.enableZoom&&!1===t.enableRotate)return;(function q(){t.enableZoom&&ie(),t.enableRotate&&ze()})(),o=r.TOUCH_DOLLY_ROTATE;break;default:o=r.NONE}break;default:o=r.NONE}o!==r.NONE&&t.dispatchEvent(Ye)}(a):function Te(a){let m;switch(a.button){case 0:m=t.mouseButtons.LEFT;break;case 1:m=t.mouseButtons.MIDDLE;break;case 2:m=t.mouseButtons.RIGHT;break;default:m=-1}switch(m){case i.RsA.DOLLY:if(!1===t.enableZoom)return;(function re(a){S.set(a.clientX,a.clientY)})(a),o=r.DOLLY;break;case i.RsA.ROTATE:if(a.ctrlKey||a.metaKey||a.shiftKey){if(!1===t.enablePan)return;ce(a),o=r.PAN}else{if(!1===t.enableRotate)return;se(a),o=r.ROTATE}break;case i.RsA.PAN:if(a.ctrlKey||a.metaKey||a.shiftKey){if(!1===t.enableRotate)return;se(a),o=r.ROTATE}else{if(!1===t.enablePan)return;ce(a),o=r.PAN}break;default:o=r.NONE}o!==r.NONE&&t.dispatchEvent(Ye)}(a))}function we(a){!1!==t.enabled&&("touch"===a.pointerType?function Me(a){switch(oe(a),o){case r.TOUCH_ROTATE:if(!1===t.enableRotate)return;K(a),t.update();break;case r.TOUCH_PAN:if(!1===t.enablePan)return;te(a),t.update();break;case r.TOUCH_DOLLY_PAN:if(!1===t.enableZoom&&!1===t.enablePan)return;(function de(a){t.enableZoom&&ke(a),t.enablePan&&te(a)})(a),t.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===t.enableZoom&&!1===t.enableRotate)return;(function ve(a){t.enableZoom&&ke(a),t.enableRotate&&K(a)})(a),t.update();break;default:o=r.NONE}}(a):function Se(a){switch(o){case r.ROTATE:if(!1===t.enableRotate)return;!function V(a){p.set(a.clientX,a.clientY),v.subVectors(p,P).multiplyScalar(t.rotateSpeed);const m=t.domElement;M(2*Math.PI*v.x/m.clientHeight),R(2*Math.PI*v.y/m.clientHeight),P.copy(p),t.update()}(a);break;case r.DOLLY:if(!1===t.enableZoom)return;!function W(a){z.set(a.clientX,a.clientY),E.subVectors(z,S),E.y>0?$(_()):E.y<0&&X(_()),S.copy(z),t.update()}(a);break;case r.PAN:if(!1===t.enablePan)return;!function H(a){C.set(a.clientX,a.clientY),f.subVectors(C,b).multiplyScalar(t.panSpeed),j(f.x,f.y),b.copy(C),t.update()}(a)}}(a))}function fe(a){Ce(a),0===y.length&&(t.domElement.releasePointerCapture(a.pointerId),t.domElement.removeEventListener("pointermove",we),t.domElement.removeEventListener("pointerup",fe)),t.dispatchEvent(qe),o=r.NONE}function ae(a){Ce(a)}function Ie(a){!1===t.enabled||!1===t.enableZoom||o!==r.NONE||(a.preventDefault(),t.dispatchEvent(Ye),function ee(a){a.deltaY<0?X(_()):a.deltaY>0&&$(_()),t.update()}(a),t.dispatchEvent(qe))}function Pe(a){!1===t.enabled||!1===t.enablePan||function le(a){let m=!1;switch(a.code){case t.keys.UP:j(0,t.keyPanSpeed),m=!0;break;case t.keys.BOTTOM:j(0,-t.keyPanSpeed),m=!0;break;case t.keys.LEFT:j(t.keyPanSpeed,0),m=!0;break;case t.keys.RIGHT:j(-t.keyPanSpeed,0),m=!0}m&&(a.preventDefault(),t.update())}(a)}function pe(a){!1!==t.enabled&&a.preventDefault()}function Ce(a){delete F[a.pointerId];for(let m=0;m<y.length;m++)if(y[m].pointerId==a.pointerId)return void y.splice(m,1)}function oe(a){let m=F[a.pointerId];void 0===m&&(m=new i.FM8,F[a.pointerId]=m),m.set(a.pageX,a.pageY)}function J(a){return F[(a.pointerId===y[0].pointerId?y[1]:y[0]).pointerId]}t.domElement.addEventListener("contextmenu",pe),t.domElement.addEventListener("pointerdown",he),t.domElement.addEventListener("pointercancel",ae),t.domElement.addEventListener("wheel",Ie,{passive:!1}),this.update()}}class xe extends _e{constructor(e,s,t,r){super(),this.renderScene=s,this.renderCamera=t,this.selectedObjects=void 0!==r?r:[],this.visibleEdgeColor=new i.Ilk(1,1,1),this.hiddenEdgeColor=new i.Ilk(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,this._visibilityCache=new Map,this.resolution=void 0!==e?new i.FM8(e.x,e.y):new i.FM8(256,256);const o=Math.round(this.resolution.x/this.downSampleRatio),n=Math.round(this.resolution.y/this.downSampleRatio);this.renderTargetMaskBuffer=new i.dd2(this.resolution.x,this.resolution.y),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new i.lRF,this.depthMaterial.side=i.ehD,this.depthMaterial.depthPacking=i.mSO,this.depthMaterial.blending=i.jFi,this.prepareMaskMaterial=this.getPrepareMaskMaterial(),this.prepareMaskMaterial.side=i.ehD,this.prepareMaskMaterial.fragmentShader=function x(w,P){return w.replace(/DEPTH_TO_VIEW_Z/g,(P.isPerspectiveCamera?"perspective":"orthographic")+"DepthToViewZ")}(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new i.dd2(this.resolution.x,this.resolution.y),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new i.dd2(o,n),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new i.dd2(o,n),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new i.dd2(Math.round(o/2),Math.round(n/2)),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this.getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new i.dd2(o,n),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new i.dd2(Math.round(o/2),Math.round(n/2)),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1,this.separableBlurMaterial1=this.getSeperableBlurMaterial(4),this.separableBlurMaterial1.uniforms.texSize.value.set(o,n),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this.getSeperableBlurMaterial(4),this.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(o/2),Math.round(n/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=4,this.overlayMaterial=this.getOverlayMaterial(),void 0===Ve&&console.error("THREE.OutlinePass relies on CopyShader");const h=Ve;this.copyUniforms=i.rDY.clone(h.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new i.jyz({uniforms:this.copyUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,blending:i.jFi,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new i.Ilk,this.oldClearAlpha=1,this.fsQuad=new Qe(null),this.tempPulseColor1=new i.Ilk,this.tempPulseColor2=new i.Ilk,this.textureMatrix=new i.yGw}dispose(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose()}setSize(e,s){this.renderTargetMaskBuffer.setSize(e,s),this.renderTargetDepthBuffer.setSize(e,s);let t=Math.round(e/this.downSampleRatio),r=Math.round(s/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(t,r),this.renderTargetBlurBuffer1.setSize(t,r),this.renderTargetEdgeBuffer1.setSize(t,r),this.separableBlurMaterial1.uniforms.texSize.value.set(t,r),t=Math.round(t/2),r=Math.round(r/2),this.renderTargetBlurBuffer2.setSize(t,r),this.renderTargetEdgeBuffer2.setSize(t,r),this.separableBlurMaterial2.uniforms.texSize.value.set(t,r)}changeVisibilityOfSelectedObjects(e){const s=this._visibilityCache;function t(r){r.isMesh&&(!0===e?r.visible=s.get(r):(s.set(r,r.visible),r.visible=e))}for(let r=0;r<this.selectedObjects.length;r++)this.selectedObjects[r].traverse(t)}changeVisibilityOfNonSelectedObjects(e){const s=this._visibilityCache,t=[];function r(n){n.isMesh&&t.push(n)}for(let n=0;n<this.selectedObjects.length;n++)this.selectedObjects[n].traverse(r);this.renderScene.traverse(function o(n){if(n.isMesh||n.isSprite){let c=!1;for(let l=0;l<t.length;l++)if(t[l].id===n.id){c=!0;break}if(!1===c){const l=n.visible;(!1===e||!0===s.get(n))&&(n.visible=e),s.set(n,l)}}else(n.isPoints||n.isLine)&&(!0===e?n.visible=s.get(n):(s.set(n,n.visible),n.visible=e))})}updateTextureMatrix(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}render(e,s,t,r,o){if(this.selectedObjects.length>0){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const n=e.autoClear;e.autoClear=!1,o&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);const c=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this.renderScene.background=c,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){const l=.625+.75*Math.cos(.01*performance.now()/this.pulsePeriod)/2;this.tempPulseColor1.multiplyScalar(l),this.tempPulseColor2.multiplyScalar(l)}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=xe.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=xe.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=xe.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=xe.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,o&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(t),this.fsQuad.render(e),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=n}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=t.texture,e.setRenderTarget(null),this.fsQuad.render(e))}getPrepareMaskMaterial(){return new i.jyz({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new i.FM8(.5,.5)},textureMatrix:{value:null}},vertexShader:"#include <morphtarget_pars_vertex>\n\t\t\t\t#include <skinning_pars_vertex>\n\n\t\t\t\tvarying vec4 projTexCoord;\n\t\t\t\tvarying vec4 vPosition;\n\t\t\t\tuniform mat4 textureMatrix;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <skinbase_vertex>\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <morphtarget_vertex>\n\t\t\t\t\t#include <skinning_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t\tvPosition = mvPosition;\n\t\t\t\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t\t\t\t\tprojTexCoord = textureMatrix * worldPosition;\n\n\t\t\t\t}",fragmentShader:"#include <packing>\n\t\t\t\tvarying vec4 vPosition;\n\t\t\t\tvarying vec4 projTexCoord;\n\t\t\t\tuniform sampler2D depthTexture;\n\t\t\t\tuniform vec2 cameraNearFar;\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));\n\t\t\t\t\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );\n\t\t\t\t\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;\n\t\t\t\t\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);\n\n\t\t\t\t}"})}getEdgeDetectionMaterial(){return new i.jyz({uniforms:{maskTexture:{value:null},texSize:{value:new i.FM8(.5,.5)},visibleEdgeColor:{value:new i.Pa4(1,1,1)},hiddenEdgeColor:{value:new i.Pa4(1,1,1)}},vertexShader:"varying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\n\t\t\t\tuniform sampler2D maskTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec3 visibleEdgeColor;\n\t\t\t\tuniform vec3 hiddenEdgeColor;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\n\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\n\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\n\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\n\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\n\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\n\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\n\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\n\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\n\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\n\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\n\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\n\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\n\t\t\t\t}"})}getSeperableBlurMaterial(e){return new i.jyz({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new i.FM8(.5,.5)},direction:{value:new i.FM8(.5,.5)},kernelRadius:{value:1}},vertexShader:"varying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float kernelRadius;\n\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\n\t\t\t\t\tfloat sigma = kernelRadius/2.0;\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, sigma);\n\t\t\t\t\tvec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;\n\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\n\t\t\t\t\tvec2 uvOffset = delta;\n\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = kernelRadius * float(i) / float(MAX_RADIUS);\n\t\t\t\t\t\tfloat w = gaussianPdf(x, sigma);\n\t\t\t\t\t\tvec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\n\t\t\t\t\t\tvec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\n\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\n\t\t\t\t\t\tweightSum += (2.0 * w);\n\t\t\t\t\t\tuvOffset += delta;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = diffuseSum/weightSum;\n\t\t\t\t}"})}getOverlayMaterial(){return new i.jyz({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:"varying vec2 vUv;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\n\n\t\t\t\tuniform sampler2D maskTexture;\n\t\t\t\tuniform sampler2D edgeTexture1;\n\t\t\t\tuniform sampler2D edgeTexture2;\n\t\t\t\tuniform sampler2D patternTexture;\n\t\t\t\tuniform float edgeStrength;\n\t\t\t\tuniform float edgeGlow;\n\t\t\t\tuniform bool usePatternTexture;\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\n\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\n\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\n\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\n\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\n\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\n\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\n\t\t\t\t\tif(usePatternTexture)\n\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\n\t\t\t\t\tgl_FragColor = finalColor;\n\t\t\t\t}",blending:i.WMw,depthTest:!1,depthWrite:!1,transparent:!0})}}xe.BlurDirectionX=new i.FM8(1,0),xe.BlurDirectionY=new i.FM8(0,1);const nt={TOutLine:xe},Je={TCatmull:i.YT8,TVector:i.Pa4},ge=globalThis.Math,Z={getRandomNumber:({min:g,max:e})=>{const s=ge.ceil(g),t=ge.floor(e);return ge.floor(ge.random()*(t-s+1))+s},getRandomFromArray:({array:g})=>g[Z.getRandomNumber({min:0,max:g.length-1})],getProportion:({boundaries:g,point:e,max:s,axis:t})=>g[t]*(e[t]||1)/(s[t]||1),putElementToTheGroupOrCreateAndPut:({group:g,key:e,element:s})=>(g[e]?g[e].push(s):g[e]=[s],g[e]),createMathObject:({}={})=>({schema:[]}),createOutline:({scene:g,camera:e,objectsArray:s,rect:t,passParams:r})=>{const o=new nt.TOutLine(new i.FM8(t.width,t.height),g,e,s);return Object.keys(r).forEach(n=>{o[n]=r[n]}),o.hiddenEdgeColor.set(1),o},createScene:()=>new i.xsS({alpha:!0}),setRendererParameters:({renderer:g,root:e,pixelRatio:s})=>{g.setPixelRatio(s||globalThis.devicePixelRatio),g.setSize(e.innerWidth,e.innerHeight)}},be_any=({schema:g=[],boundaries:e={},frequency:s=100,cycled:t=!1,curveType:r="catmullrom",tension:o=0})=>{const n=Z.createMathObject(),c={x:[],y:[],z:[]},l={x:0,y:0,z:0};for(let h=0;h<g.length;h++){const x=g[h];for(let w=0;w<x.length;w++){const P=x[w],{x:p,y:v,z:b}=P.coordinates;p>l.x&&(l.x=p),v>l.y&&(l.y=v),b>l.z&&(l.z=b)}}for(let h=0;h<g.length;h++){const x=g[h];for(let v=0;v<x.length;v++){const b=x[v],C=Z.getProportion({boundaries:e,point:b.coordinates,max:l,axis:"x"}),f=Z.getProportion({boundaries:e,point:b.coordinates,max:l,axis:"y"}),S=Z.getProportion({boundaries:e,point:b.coordinates,max:l,axis:"z"});b.coordinates={x:C,y:f,z:S}}const w=[...x.map(v=>{const{x:b,y:C,z:f}=v.coordinates;return new Je.TVector(b,C,f)})],p=new Je.TCatmull(w,t,r,o).getPoints(s);for(let v=0;v<p.length;v++){const b=p[v],{x:C,y:f,z:S}=b;Z.putElementToTheGroupOrCreateAndPut({group:c.x,key:C,element:b}),Z.putElementToTheGroupOrCreateAndPut({group:c.y,key:f,element:b}),Z.putElementToTheGroupOrCreateAndPut({group:c.z,key:S,element:b})}n.schema.push(p)}return n.group=c,n};class Ge{constructor(e=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let s=0;s<256;s++)this.p[s]=Math.floor(256*e.random());this.perm=[];for(let s=0;s<512;s++)this.perm[s]=this.p[255&s];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}dot(e,s,t){return e[0]*s+e[1]*t}dot3(e,s,t,r){return e[0]*s+e[1]*t+e[2]*r}dot4(e,s,t,r,o){return e[0]*s+e[1]*t+e[2]*r+e[3]*o}noise(e,s){let t,r,o;const c=(e+s)*(.5*(Math.sqrt(3)-1)),l=Math.floor(e+c),h=Math.floor(s+c),x=(3-Math.sqrt(3))/6,w=(l+h)*x,v=e-(l-w),b=s-(h-w);let C,f;v>b?(C=1,f=0):(C=0,f=1);const S=v-C+x,z=b-f+x,E=v-1+2*x,y=b-1+2*x,F=255&l,N=255&h,M=this.perm[F+C+this.perm[N+f]]%12,R=this.perm[F+1+this.perm[N+1]]%12;let I=.5-v*v-b*b;I<0?t=0:(I*=I,t=I*I*this.dot(this.grad3[this.perm[F+this.perm[N]]%12],v,b));let A=.5-S*S-z*z;A<0?r=0:(A*=A,r=A*A*this.dot(this.grad3[M],S,z));let j=.5-E*E-y*y;return j<0?o=0:(j*=j,o=j*j*this.dot(this.grad3[R],E,y)),70*(t+r+o)}noise3d(e,s,t){let r,o,n,c;const h=.3333333333333333*(e+s+t),x=Math.floor(e+h),w=Math.floor(s+h),P=Math.floor(t+h),p=1/6,v=(x+w+P)*p,S=e-(x-v),z=s-(w-v),E=t-(P-v);let y,F,N,_,M,R;S>=z?z>=E?(y=1,F=0,N=0,_=1,M=1,R=0):S>=E?(y=1,F=0,N=0,_=1,M=0,R=1):(y=0,F=0,N=1,_=1,M=0,R=1):z<E?(y=0,F=0,N=1,_=0,M=1,R=1):S<E?(y=0,F=1,N=0,_=0,M=1,R=1):(y=0,F=1,N=0,_=1,M=1,R=0);const I=S-y+p,A=z-F+p,j=E-N+p,$=S-_+2*p,X=z-M+2*p,se=E-R+2*p,re=S-1+.5,ce=z-1+.5,V=E-1+.5,W=255&x,H=255&w,ee=255&P,ze=this.perm[W+y+this.perm[H+F+this.perm[ee+N]]]%12,ue=this.perm[W+_+this.perm[H+M+this.perm[ee+R]]]%12,ie=this.perm[W+1+this.perm[H+1+this.perm[ee+1]]]%12;let T=.6-S*S-z*z-E*E;T<0?r=0:(T*=T,r=T*T*this.dot3(this.grad3[this.perm[W+this.perm[H+this.perm[ee]]]%12],S,z,E));let q=.6-I*I-A*A-j*j;q<0?o=0:(q*=q,o=q*q*this.dot3(this.grad3[ze],I,A,j));let K=.6-$*$-X*X-se*se;K<0?n=0:(K*=K,n=K*K*this.dot3(this.grad3[ue],$,X,se));let te=.6-re*re-ce*ce-V*V;return te<0?c=0:(te*=te,c=te*te*this.dot3(this.grad3[ie],re,ce,V)),32*(r+o+n+c)}noise4d(e,s,t,r){const o=this.grad4,n=this.simplex,c=this.perm,l=(Math.sqrt(5)-1)/4,h=(5-Math.sqrt(5))/20;let x,w,P,p,v;const b=(e+s+t+r)*l,C=Math.floor(e+b),f=Math.floor(s+b),S=Math.floor(t+b),z=Math.floor(r+b),E=(C+f+S+z)*h,M=e-(C-E),R=s-(f-E),I=t-(S-E),A=r-(z-E),V=(M>R?32:0)+(M>I?16:0)+(R>I?8:0)+(M>A?4:0)+(R>A?2:0)+(I>A?1:0),W=n[V][0]>=3?1:0,H=n[V][1]>=3?1:0,ee=n[V][2]>=3?1:0,le=n[V][3]>=3?1:0,ze=n[V][0]>=2?1:0,ue=n[V][1]>=2?1:0,ie=n[V][2]>=2?1:0,T=n[V][3]>=2?1:0,q=n[V][0]>=1?1:0,K=n[V][1]>=1?1:0,te=n[V][2]>=1?1:0,ke=n[V][3]>=1?1:0,de=M-W+h,ve=R-H+h,he=I-ee+h,we=A-le+h,fe=M-ze+2*h,ae=R-ue+2*h,Te=I-ie+2*h,Se=A-T+2*h,Ie=M-q+3*h,Pe=R-K+3*h,me=I-te+3*h,Me=A-ke+3*h,pe=M-1+4*h,Be=R-1+4*h,Ce=I-1+4*h,oe=A-1+4*h,J=255&C,a=255&f,m=255&S,O=255&z,Q=c[J+W+c[a+H+c[m+ee+c[O+le]]]]%32,ne=c[J+ze+c[a+ue+c[m+ie+c[O+T]]]]%32,ye=c[J+q+c[a+K+c[m+te+c[O+ke]]]]%32,Ee=c[J+1+c[a+1+c[m+1+c[O+1]]]]%32;let U=.6-M*M-R*R-I*I-A*A;U<0?x=0:(U*=U,x=U*U*this.dot4(o[c[J+c[a+c[m+c[O]]]]%32],M,R,I,A));let Y=.6-de*de-ve*ve-he*he-we*we;Y<0?w=0:(Y*=Y,w=Y*Y*this.dot4(o[Q],de,ve,he,we));let Re=.6-fe*fe-ae*ae-Te*Te-Se*Se;Re<0?P=0:(Re*=Re,P=Re*Re*this.dot4(o[ne],fe,ae,Te,Se));let De=.6-Ie*Ie-Pe*Pe-me*me-Me*Me;De<0?p=0:(De*=De,p=De*De*this.dot4(o[ye],Ie,Pe,me,Me));let Oe=.6-pe*pe-Be*Be-Ce*Ce-oe*oe;return Oe<0?v=0:(Oe*=Oe,v=Oe*Oe*this.dot4(o[Ee],pe,Be,Ce,oe)),27*(x+w+P+p+v)}}class D extends i.u9r{constructor(e={}){super(),this.isLightningStrike=!0,this.type="LightningStrike",this.init(D.copyParameters(e,e)),this.createMesh()}static createRandomGenerator(){const s=[];for(let r=0;r<2053;r++)s.push(Math.random());const t={currentSeed:0,random:function(){const r=s[t.currentSeed];return t.currentSeed=(t.currentSeed+1)%2053,r},getSeed:function(){return t.currentSeed/2053},setSeed:function(r){t.currentSeed=Math.floor(2053*r)%2053}};return t}static copyParameters(e={},s={}){const t=function(r){return s===e?r:r.clone()};return e.sourceOffset=void 0!==s.sourceOffset?t(s.sourceOffset):new i.Pa4(0,100,0),e.destOffset=void 0!==s.destOffset?t(s.destOffset):new i.Pa4(0,0,0),e.timeScale=void 0!==s.timeScale?s.timeScale:1,e.roughness=void 0!==s.roughness?s.roughness:.9,e.straightness=void 0!==s.straightness?s.straightness:.7,e.up0=void 0!==s.up0?t(s.up0):new i.Pa4(0,0,1),e.up1=void 0!==s.up1?t(s.up1):new i.Pa4(0,0,1),e.radius0=void 0!==s.radius0?s.radius0:1,e.radius1=void 0!==s.radius1?s.radius1:1,e.radius0Factor=void 0!==s.radius0Factor?s.radius0Factor:.5,e.radius1Factor=void 0!==s.radius1Factor?s.radius1Factor:.2,e.minRadius=void 0!==s.minRadius?s.minRadius:.2,e.isEternal=void 0!==s.isEternal?s.isEternal:void 0===s.birthTime||void 0===s.deathTime,e.birthTime=s.birthTime,e.deathTime=s.deathTime,e.propagationTimeFactor=void 0!==s.propagationTimeFactor?s.propagationTimeFactor:.1,e.vanishingTimeFactor=void 0!==s.vanishingTimeFactor?s.vanishingTimeFactor:.9,e.subrayPeriod=void 0!==s.subrayPeriod?s.subrayPeriod:4,e.subrayDutyCycle=void 0!==s.subrayDutyCycle?s.subrayDutyCycle:.6,e.maxIterations=void 0!==s.maxIterations?s.maxIterations:9,e.isStatic=void 0!==s.isStatic&&s.isStatic,e.ramification=void 0!==s.ramification?s.ramification:5,e.maxSubrayRecursion=void 0!==s.maxSubrayRecursion?s.maxSubrayRecursion:3,e.recursionProbability=void 0!==s.recursionProbability?s.recursionProbability:.6,e.generateUVs=void 0!==s.generateUVs&&s.generateUVs,e.randomGenerator=s.randomGenerator,e.noiseSeed=s.noiseSeed,e.onDecideSubrayCreation=s.onDecideSubrayCreation,e.onSubrayCreation=s.onSubrayCreation,e}update(e){this.isStatic||(this.rayParameters.isEternal||this.rayParameters.birthTime<=e&&e<=this.rayParameters.deathTime?(this.updateMesh(e),this.state=e<this.subrays[0].endPropagationTime?D.RAY_PROPAGATING:e>this.subrays[0].beginVanishingTime?D.RAY_VANISHING:D.RAY_STEADY,this.visible=!0):(this.visible=!1,this.state=e<this.rayParameters.birthTime?D.RAY_UNBORN:D.RAY_EXTINGUISHED))}init(e){this.rayParameters=e,this.maxIterations=void 0!==e.maxIterations?Math.floor(e.maxIterations):9,e.maxIterations=this.maxIterations,this.isStatic=void 0!==e.isStatic&&e.isStatic,e.isStatic=this.isStatic,this.ramification=void 0!==e.ramification?Math.floor(e.ramification):5,e.ramification=this.ramification,this.maxSubrayRecursion=void 0!==e.maxSubrayRecursion?Math.floor(e.maxSubrayRecursion):3,e.maxSubrayRecursion=this.maxSubrayRecursion,this.recursionProbability=void 0!==e.recursionProbability?e.recursionProbability:.6,e.recursionProbability=this.recursionProbability,this.generateUVs=void 0!==e.generateUVs&&e.generateUVs,e.generateUVs=this.generateUVs,void 0!==e.randomGenerator?(this.randomGenerator=e.randomGenerator,this.seedGenerator=e.randomGenerator,void 0!==e.noiseSeed&&this.seedGenerator.setSeed(e.noiseSeed)):(this.randomGenerator=D.createRandomGenerator(),this.seedGenerator=Math),void 0!==e.onDecideSubrayCreation?this.onDecideSubrayCreation=e.onDecideSubrayCreation:(this.createDefaultSubrayCreationCallbacks(),void 0!==e.onSubrayCreation&&(this.onSubrayCreation=e.onSubrayCreation)),this.state=D.RAY_INITIALIZED,this.maxSubrays=Math.ceil(1+Math.pow(this.ramification,Math.max(0,this.maxSubrayRecursion-1))),e.maxSubrays=this.maxSubrays,this.maxRaySegments=2*(1<<this.maxIterations),this.subrays=[];for(let s=0;s<this.maxSubrays;s++)this.subrays.push(this.createSubray());this.raySegments=[];for(let s=0;s<this.maxRaySegments;s++)this.raySegments.push(this.createSegment());this.time=0,this.timeFraction=0,this.currentSegmentCallback=null,this.currentCreateTriangleVertices=this.generateUVs?this.createTriangleVerticesWithUVs:this.createTriangleVerticesWithoutUVs,this.numSubrays=0,this.currentSubray=null,this.currentSegmentIndex=0,this.isInitialSegment=!1,this.subrayProbability=0,this.currentVertex=0,this.currentIndex=0,this.currentCoordinate=0,this.currentUVCoordinate=0,this.vertices=null,this.uvs=null,this.indices=null,this.positionAttribute=null,this.uvsAttribute=null,this.simplexX=new Ge(this.seedGenerator),this.simplexY=new Ge(this.seedGenerator),this.simplexZ=new Ge(this.seedGenerator),this.forwards=new i.Pa4,this.forwardsFill=new i.Pa4,this.side=new i.Pa4,this.down=new i.Pa4,this.middlePos=new i.Pa4,this.middleLinPos=new i.Pa4,this.newPos=new i.Pa4,this.vPos=new i.Pa4,this.cross1=new i.Pa4}createMesh(){const e=1<<this.maxIterations,s=3*(e+1)*this.maxSubrays,t=18*e*this.maxSubrays;this.vertices=new Float32Array(3*s),this.indices=new Uint32Array(t),this.generateUVs&&(this.uvs=new Float32Array(2*s)),this.fillMesh(0),this.setIndex(new i.lCJ(this.indices,1)),this.positionAttribute=new i.a$l(this.vertices,3),this.setAttribute("position",this.positionAttribute),this.generateUVs&&(this.uvsAttribute=new i.a$l(new Float32Array(this.uvs),2),this.setAttribute("uv",this.uvsAttribute)),this.isStatic||(this.index.usage=i.dj0,this.positionAttribute.usage=i.dj0,this.generateUVs&&(this.uvsAttribute.usage=i.dj0)),this.vertices=this.positionAttribute.array,this.indices=this.index.array,this.generateUVs&&(this.uvs=this.uvsAttribute.array)}updateMesh(e){this.fillMesh(e),this.drawRange.count=this.currentIndex,this.index.needsUpdate=!0,this.positionAttribute.needsUpdate=!0,this.generateUVs&&(this.uvsAttribute.needsUpdate=!0)}fillMesh(e){const s=this;this.currentVertex=0,this.currentIndex=0,this.currentCoordinate=0,this.currentUVCoordinate=0,this.fractalRay(e,function(r){const o=s.currentSubray;e<o.birthTime||(this.rayParameters.isEternal&&0==s.currentSubray.recursion?(s.createPrism(r),s.onDecideSubrayCreation(r,s)):e<o.endPropagationTime?s.timeFraction>=r.fraction0*o.propagationTimeFactor&&(s.createPrism(r),s.onDecideSubrayCreation(r,s)):e<o.beginVanishingTime?(s.createPrism(r),s.onDecideSubrayCreation(r,s)):(s.timeFraction<=o.vanishingTimeFactor+r.fraction1*(1-o.vanishingTimeFactor)&&s.createPrism(r),s.onDecideSubrayCreation(r,s)))})}addNewSubray(){return this.subrays[this.numSubrays++]}initSubray(e,s){e.pos0.copy(s.sourceOffset),e.pos1.copy(s.destOffset),e.up0.copy(s.up0),e.up1.copy(s.up1),e.radius0=s.radius0,e.radius1=s.radius1,e.birthTime=s.birthTime,e.deathTime=s.deathTime,e.timeScale=s.timeScale,e.roughness=s.roughness,e.straightness=s.straightness,e.propagationTimeFactor=s.propagationTimeFactor,e.vanishingTimeFactor=s.vanishingTimeFactor,e.maxIterations=this.maxIterations,e.seed=void 0!==s.noiseSeed?s.noiseSeed:0,e.recursion=0}fractalRay(e,s){this.time=e,this.currentSegmentCallback=s,this.numSubrays=0,this.initSubray(this.addNewSubray(),this.rayParameters);for(let t=0;t<this.numSubrays;t++){const r=this.subrays[t];this.currentSubray=r,this.randomGenerator.setSeed(r.seed),r.endPropagationTime=i.M8C.lerp(r.birthTime,r.deathTime,r.propagationTimeFactor),r.beginVanishingTime=i.M8C.lerp(r.deathTime,r.birthTime,1-r.vanishingTimeFactor);const o=this.randomGenerator.random;r.linPos0.set(o(),o(),o()).multiplyScalar(1e3),r.linPos1.set(o(),o(),o()).multiplyScalar(1e3),this.timeFraction=(e-r.birthTime)/(r.deathTime-r.birthTime),this.currentSegmentIndex=0,this.isInitialSegment=!0;const n=this.getNewSegment();n.iteration=0,n.pos0.copy(r.pos0),n.pos1.copy(r.pos1),n.linPos0.copy(r.linPos0),n.linPos1.copy(r.linPos1),n.up0.copy(r.up0),n.up1.copy(r.up1),n.radius0=r.radius0,n.radius1=r.radius1,n.fraction0=0,n.fraction1=1,n.positionVariationFactor=1-r.straightness,this.subrayProbability=this.ramification*Math.pow(this.recursionProbability,r.recursion)/(1<<r.maxIterations),this.fractalRayRecursive(n)}this.currentSegmentCallback=null,this.currentSubray=null}fractalRayRecursive(e){if(e.iteration>=this.currentSubray.maxIterations)return void this.currentSegmentCallback(e);this.forwards.subVectors(e.pos1,e.pos0);let s=this.forwards.length();s<1e-6&&(this.forwards.set(0,0,.01),s=this.forwards.length());const t=.5*(e.radius0+e.radius1),r=.5*(e.fraction0+e.fraction1),o=this.time*this.currentSubray.timeScale*Math.pow(2,e.iteration);this.middlePos.lerpVectors(e.pos0,e.pos1,.5),this.middleLinPos.lerpVectors(e.linPos0,e.linPos1,.5);const n=this.middleLinPos;this.newPos.set(this.simplexX.noise4d(n.x,n.y,n.z,o),this.simplexY.noise4d(n.x,n.y,n.z,o),this.simplexZ.noise4d(n.x,n.y,n.z,o)),this.newPos.multiplyScalar(e.positionVariationFactor*s),this.newPos.add(this.middlePos);const c=this.getNewSegment();c.pos0.copy(e.pos0),c.pos1.copy(this.newPos),c.linPos0.copy(e.linPos0),c.linPos1.copy(this.middleLinPos),c.up0.copy(e.up0),c.up1.copy(e.up1),c.radius0=e.radius0,c.radius1=t,c.fraction0=e.fraction0,c.fraction1=r,c.positionVariationFactor=e.positionVariationFactor*this.currentSubray.roughness,c.iteration=e.iteration+1;const l=this.getNewSegment();l.pos0.copy(this.newPos),l.pos1.copy(e.pos1),l.linPos0.copy(this.middleLinPos),l.linPos1.copy(e.linPos1),this.cross1.crossVectors(e.up0,this.forwards.normalize()),l.up0.crossVectors(this.forwards,this.cross1).normalize(),l.up1.copy(e.up1),l.radius0=t,l.radius1=e.radius1,l.fraction0=r,l.fraction1=e.fraction1,l.positionVariationFactor=e.positionVariationFactor*this.currentSubray.roughness,l.iteration=e.iteration+1,this.fractalRayRecursive(c),this.fractalRayRecursive(l)}createPrism(e){this.forwardsFill.subVectors(e.pos1,e.pos0).normalize(),this.isInitialSegment&&(this.currentCreateTriangleVertices(e.pos0,e.up0,this.forwardsFill,e.radius0,0),this.isInitialSegment=!1),this.currentCreateTriangleVertices(e.pos1,e.up0,this.forwardsFill,e.radius1,e.fraction1),this.createPrismFaces()}createTriangleVerticesWithoutUVs(e,s,t,r){this.side.crossVectors(s,t).multiplyScalar(r*D.COS30DEG),this.down.copy(s).multiplyScalar(-r*D.SIN30DEG);const o=this.vPos,n=this.vertices;o.copy(e).sub(this.side).add(this.down),n[this.currentCoordinate++]=o.x,n[this.currentCoordinate++]=o.y,n[this.currentCoordinate++]=o.z,o.copy(e).add(this.side).add(this.down),n[this.currentCoordinate++]=o.x,n[this.currentCoordinate++]=o.y,n[this.currentCoordinate++]=o.z,o.copy(s).multiplyScalar(r).add(e),n[this.currentCoordinate++]=o.x,n[this.currentCoordinate++]=o.y,n[this.currentCoordinate++]=o.z,this.currentVertex+=3}createTriangleVerticesWithUVs(e,s,t,r,o){this.side.crossVectors(s,t).multiplyScalar(r*D.COS30DEG),this.down.copy(s).multiplyScalar(-r*D.SIN30DEG);const n=this.vPos,c=this.vertices,l=this.uvs;n.copy(e).sub(this.side).add(this.down),c[this.currentCoordinate++]=n.x,c[this.currentCoordinate++]=n.y,c[this.currentCoordinate++]=n.z,l[this.currentUVCoordinate++]=o,l[this.currentUVCoordinate++]=0,n.copy(e).add(this.side).add(this.down),c[this.currentCoordinate++]=n.x,c[this.currentCoordinate++]=n.y,c[this.currentCoordinate++]=n.z,l[this.currentUVCoordinate++]=o,l[this.currentUVCoordinate++]=.5,n.copy(s).multiplyScalar(r).add(e),c[this.currentCoordinate++]=n.x,c[this.currentCoordinate++]=n.y,c[this.currentCoordinate++]=n.z,l[this.currentUVCoordinate++]=o,l[this.currentUVCoordinate++]=1,this.currentVertex+=3}createPrismFaces(e){const s=this.indices;e=this.currentVertex-6,s[this.currentIndex++]=e+1,s[this.currentIndex++]=e+2,s[this.currentIndex++]=e+5,s[this.currentIndex++]=e+1,s[this.currentIndex++]=e+5,s[this.currentIndex++]=e+4,s[this.currentIndex++]=e+0,s[this.currentIndex++]=e+1,s[this.currentIndex++]=e+4,s[this.currentIndex++]=e+0,s[this.currentIndex++]=e+4,s[this.currentIndex++]=e+3,s[this.currentIndex++]=e+2,s[this.currentIndex++]=e+0,s[this.currentIndex++]=e+3,s[this.currentIndex++]=e+2,s[this.currentIndex++]=e+3,s[this.currentIndex++]=e+5}createDefaultSubrayCreationCallbacks(){const e=this.randomGenerator.random;this.onDecideSubrayCreation=function(n,c){const l=c.currentSubray,h=c.rayParameters.subrayPeriod,x=c.rayParameters.subrayDutyCycle,w=c.rayParameters.isEternal&&0==l.recursion?-e()*h:i.M8C.lerp(l.birthTime,l.endPropagationTime,n.fraction0)-e()*h,P=c.time-w,p=Math.floor(P/h),v=e()*(p+1);let C=0;if(P%h<=x*h&&(C=c.subrayProbability),l.recursion<c.maxSubrayRecursion&&c.numSubrays<c.maxSubrays&&e()<C){const f=c.addNewSubray(),S=c.randomGenerator.getSeed();f.seed=v,c.randomGenerator.setSeed(v),f.recursion=l.recursion+1,f.maxIterations=Math.max(1,l.maxIterations-1),f.linPos0.set(e(),e(),e()).multiplyScalar(1e3),f.linPos1.set(e(),e(),e()).multiplyScalar(1e3),f.up0.copy(l.up0),f.up1.copy(l.up1),f.radius0=n.radius0*c.rayParameters.radius0Factor,f.radius1=Math.min(c.rayParameters.minRadius,n.radius1*c.rayParameters.radius1Factor),f.birthTime=w+p*h,f.deathTime=f.birthTime+h*x,!c.rayParameters.isEternal&&0==l.recursion&&(f.birthTime=Math.max(f.birthTime,l.birthTime),f.deathTime=Math.min(f.deathTime,l.deathTime)),f.timeScale=2*l.timeScale,f.roughness=l.roughness,f.straightness=l.straightness,f.propagationTimeFactor=l.propagationTimeFactor,f.vanishingTimeFactor=l.vanishingTimeFactor,c.onSubrayCreation(n,l,f,c),c.randomGenerator.setSeed(S)}};const s=new i.Pa4,t=new i.Pa4,r=new i.Pa4,o=new i.Pa4;this.onSubrayCreation=function(n,c,l,h){h.subrayCylinderPosition(n,c,l,.5,.6,.2)},this.subrayConePosition=function(n,c,l,h,x,w){l.pos0.copy(n.pos0),s.subVectors(c.pos1,c.pos0),t.copy(s).normalize(),s.multiplyScalar(n.fraction0+(1-n.fraction0)*(e()*h));const P=s.length();r.crossVectors(c.up0,t);const p=2*Math.PI*e();r.multiplyScalar(Math.cos(p)),o.copy(c.up0).multiplyScalar(Math.sin(p)),l.pos1.copy(r).add(o).multiplyScalar(P*x*(w+e()*(1-w))).add(s).add(c.pos0)},this.subrayCylinderPosition=function(n,c,l,h,x,w){l.pos0.copy(n.pos0),s.subVectors(c.pos1,c.pos0),t.copy(s).normalize(),s.multiplyScalar(n.fraction0+(1-n.fraction0)*((2*e()-1)*h));const P=s.length();r.crossVectors(c.up0,t);const p=2*Math.PI*e();r.multiplyScalar(Math.cos(p)),o.copy(c.up0).multiplyScalar(Math.sin(p)),l.pos1.copy(r).add(o).multiplyScalar(P*x*(w+e()*(1-w))).add(s).add(c.pos0)}}createSubray(){return{seed:0,maxIterations:0,recursion:0,pos0:new i.Pa4,pos1:new i.Pa4,linPos0:new i.Pa4,linPos1:new i.Pa4,up0:new i.Pa4,up1:new i.Pa4,radius0:0,radius1:0,birthTime:0,deathTime:0,timeScale:0,roughness:0,straightness:0,propagationTimeFactor:0,vanishingTimeFactor:0,endPropagationTime:0,beginVanishingTime:0}}createSegment(){return{iteration:0,pos0:new i.Pa4,pos1:new i.Pa4,linPos0:new i.Pa4,linPos1:new i.Pa4,up0:new i.Pa4,up1:new i.Pa4,radius0:0,radius1:0,fraction0:0,fraction1:0,positionVariationFactor:0}}getNewSegment(){return this.raySegments[this.currentSegmentIndex++]}copy(e){return super.copy(e),this.init(D.copyParameters({},e.rayParameters)),this}clone(){return new this.constructor(D.copyParameters({},this.rayParameters))}}D.RAY_INITIALIZED=0,D.RAY_UNBORN=1,D.RAY_PROPAGATING=2,D.RAY_STEADY=3,D.RAY_VANISHING=4,D.RAY_EXTINGUISHED=5,D.COS30DEG=Math.cos(30*Math.PI/180),D.SIN30DEG=Math.sin(30*Math.PI/180);const je={init:({mask:g,pos:e,color:s="gray",rayParams:t})=>{const r={mask:g,group:new i.ZAu,elements:{cone1:new i.Kj0(new i.b_z(0,0,30,1,!1)),cone2:new i.Kj0(new i.b_z(0,0,30,1,!1)),lStrike:new D(t),lMaterial:new i.vBJ({color:s,transparent:!0}),lStrikeMesh:null},pos:[...e]};return r.elements.lStrikeMesh=new i.Kj0(r.elements.lStrike,r.elements.lMaterial),[r.elements.lStrikeMesh].forEach(o=>{r.group.add(o)}),{lStrike:r.elements.lStrike,lMaterial:r.elements.lMaterial,lStrikeMesh:r.elements.lStrikeMesh,group:r.group,animate:({time:o})=>{r.elements.cone1.position.set(...r.pos[0]),r.elements.cone2.position.set(...r.pos[1]),r.elements.lStrike.rayParameters.sourceOffset.copy(r.elements.cone1.position),r.elements.lStrike.rayParameters.destOffset.copy(r.elements.cone2.position),r.elements.lStrike.update(o)},changePosition:({pos:o})=>{r.pos=[...o]},onWindowResize:()=>{}}}},ct={init:({color:g="gray",radius:e=300,limbs:s=12,rayParams:t={radius0:2.2,radius1:2.2,minRadius:.5,maxIterations:3,propagationTimeFactor:0,vanishingTimeFactor:1,subrayPeriod:5,subrayDutyCycle:3,maxSubrayRecursion:3,ramification:12,recursionProbability:10,roughness:1.523,straightness:1.12,sourceOffset:new i.Pa4,destOffset:new i.Pa4,timeScale:-.04}}={})=>{const r=new i.ZAu,o=[];let n=0,c=360/s;for(let x=0;x<s;x++){const w=0+e*Math.cos(n*Math.PI/180),P=0+e*Math.sin(n*Math.PI/180),p=je.init({pos:[[0,0,0],[w,P,0]],color:g,rayParams:t});r.add(p.lStrikeMesh),o[o.length]=p,n+=c}return{limbs:o,group:r,animate:({time:x})=>{o.forEach(w=>{w.animate({time:x})})}}}};function lt({canvas:g}){const e={canvas:g,time:0,clock:new i.SUY,animationId:0,renderer:new i.CP7({antialias:!0,canvas:g}),cameras:{},scenes:{general:Z.createScene()},library:{blaze:je,snowflake:ct},sceneKeys:["general"],listeners:{},abstractions:{},config:{timeRate:1,outlineEnabled:!1,cameraPositions:{}},drawing:!1,pixelRatio:4};Z.setRendererParameters({renderer:e.renderer,root:globalThis,pixelRatio:1*globalThis.devicePixelRatio});const s=e.canvas.getBoundingClientRect();e.cameras.general=new i.cPb(45,s.width/s.height,1,4e3),e.cameras.general.aspect=s.width/s.height,e.cameras.general.updateProjectionMatrix();const t=e.listeners[0]=()=>{setTimeout(()=>{Z.setRendererParameters({renderer:e.renderer,root:globalThis,pixelRatio:1*globalThis.devicePixelRatio});const d=e.canvas.getBoundingClientRect();e.cameras.general.aspect=d.width/d.height,e.cameras.general.updateProjectionMatrix()},200)},r=Object.keys(i.Ilk.NAMES);let o="red";e.composer=new it(e.renderer),e.composer.passes=[],e.composer.addPass(new at(e.scenes.general,e.cameras.general));const h=Z.createOutline({scene:e.scenes.general,camera:e.cameras.general,objectsArray:[],rect:s,passParams:{edgeStrength:1.15,edgeGlow:4.5,edgeThickness:1.8,visibleEdgeColor:new i.Ilk("chocolate")}});e.composer.addPass(h);const x=e.library.snowflake.init({color:"brown",radius:222,limbs:3,rayParams:{radius0:2,radius1:2,minRadius:2,maxIterations:3,propagationTimeFactor:0,vanishingTimeFactor:0,subrayPeriod:0,subrayDutyCycle:0,maxSubrayRecursion:0,ramification:0,recursionProbability:0,roughness:1,straightness:1,sourceOffset:new i.Pa4,destOffset:new i.Pa4,timeScale:0}});x.limbs.forEach(d=>{d.lMaterial.opacity=.5}),x.group.position.set(-450,50,100);const w=new i.BVQ(11,0,4,4),P=new i.vBJ({color:"black",transparent:!0,opacity:.5}),p=new i.Kj0(w,P),v=je.init({pos:[[0,150,0],[0,0,0]],color:"slateblue",rayParams:{radius0:2.07,radius1:2.07,minRadius:.5,maxIterations:4,propagationTimeFactor:5,vanishingTimeFactor:2,subrayPeriod:7,subrayDutyCycle:5,maxSubrayRecursion:5,ramification:7,recursionProbability:7,roughness:1.3,straightness:1.3,sourceOffset:new i.Pa4,destOffset:new i.Pa4,timeScale:-.05}}),b=je.init({pos:[[-25,200,0],[200,-425,0]],color:"slateblue",rayParams:{radius0:2.07,radius1:2.07,minRadius:.5,maxIterations:4,propagationTimeFactor:5,vanishingTimeFactor:2,subrayPeriod:7,subrayDutyCycle:5,maxSubrayRecursion:5,ramification:7,recursionProbability:7,roughness:1.1,straightness:1.1,sourceOffset:new i.Pa4,destOffset:new i.Pa4,timeScale:-.05}}),C=je.init({pos:[[0,0,100],[4e3,0,100]],color:"chocolate",rayParams:{radius0:4.07,radius1:4.07,minRadius:5,maxIterations:4,propagationTimeFactor:0,vanishingTimeFactor:0,subrayPeriod:0,subrayDutyCycle:0,maxSubrayRecursion:0,ramification:0,recursionProbability:0,roughness:1.8,straightness:1.04,sourceOffset:new i.Pa4,destOffset:new i.Pa4,timeScale:-.05}});v.lMaterial.opacity=.5,b.lMaterial.opacity=.5,C.lMaterial.opacity=.5;const f=[[-200,-200,-30],[-200,-200,-30]],S={radius0:1,radius1:1,minRadius:.5,maxIterations:3,propagationTimeFactor:0,vanishingTimeFactor:1,subrayPeriod:0,subrayDutyCycle:0,maxSubrayRecursion:0,ramification:1,recursionProbability:0,roughness:1.1,straightness:1.1,sourceOffset:new i.Pa4,destOffset:new i.Pa4,timeScale:-.4},z=[e.library.blaze.init({pos:f,color:o,rayParams:S}),e.library.blaze.init({pos:f,color:o,rayParams:S}),e.library.blaze.init({pos:f,color:o,rayParams:S}),e.library.blaze.init({pos:f,color:o,rayParams:S})],E=be_any({schema:[[{coordinates:{x:0,y:0,z:0}},{coordinates:{x:20,y:0,z:0}},{coordinates:{x:0,y:10,z:0}},{coordinates:{x:20,y:20,z:0}},{coordinates:{x:0,y:20,z:0}}],[{coordinates:{x:25,y:0,z:0}},{coordinates:{x:45,y:5,z:0}},{coordinates:{x:45,y:10,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:25,y:0,z:0}}]],boundaries:{x:600,y:500,z:300},frequency:55,tension:-1.1}),N=Object.keys(E.group.x).sort((d,u)=>d-u).map(d=>E.group.x[d]),_=new i.ZAu;_.position.set(-1800,-200,-480);const R=be_any({schema:[[{coordinates:{x:20,y:0,z:0}},{coordinates:{x:0,y:0,z:0}},{coordinates:{x:20,y:10,z:0}},{coordinates:{x:0,y:20,z:0}},{coordinates:{x:20,y:20,z:0}}],[{coordinates:{x:25,y:0,z:0}},{coordinates:{x:25,y:3,z:0}},{coordinates:{x:40,y:15,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:25,y:0,z:0}}],[{coordinates:{x:37.5,y:0,z:0}},{coordinates:{x:37.5,y:20,z:0}},{coordinates:{x:55,y:10,z:0}}],[{coordinates:{x:37.5,y:20,z:0}},{coordinates:{x:65,y:20,z:0}}],[{coordinates:{x:55,y:10,z:0}},{coordinates:{x:55,y:0,z:0}}],[{coordinates:{x:65,y:20,z:0}},{coordinates:{x:65,y:0,z:0}},{coordinates:{x:80,y:20,z:0}},{coordinates:{x:95,y:0,z:0}},{coordinates:{x:95,y:20,z:0}}],[{coordinates:{x:77.5,y:10,z:0}},{coordinates:{x:95,y:10,z:0}}],[{coordinates:{x:95,y:20,z:0}},{coordinates:{x:120,y:15,z:0}},{coordinates:{x:95,y:10,z:0}},{coordinates:{x:120,y:0,z:0}}],[{coordinates:{x:95,y:7,z:0}},{coordinates:{x:125,y:10,z:0}}]],boundaries:{x:1800,y:500,z:300},frequency:55,tension:-1.1}),j=Object.keys(R.group.y).sort((d,u)=>u-d).map(d=>R.group.y[d]),$=new i.ZAu;$.position.set(0,-200,-480);const se=be_any({schema:[[{coordinates:{x:0,y:17,z:0}},{coordinates:{x:0,y:3,z:0}}],[{coordinates:{x:0,y:10,z:0}},{coordinates:{x:15,y:10,z:0}}],[{coordinates:{x:10,y:20,z:0}},{coordinates:{x:10,y:0,z:0}}],[{coordinates:{x:15,y:20,z:0}},{coordinates:{x:15,y:0,z:0}},{coordinates:{x:25,y:0,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:15,y:20,z:0}}],[{coordinates:{x:25,y:20,z:0}},{coordinates:{x:35,y:20,z:0}}],[{coordinates:{x:30,y:20,z:0}},{coordinates:{x:30,y:0,z:0}}]],boundaries:{x:850,y:50,z:300},frequency:33,tension:0}),V=Object.keys(se.group.x).sort((d,u)=>u-d).map(d=>se.group.x[d]),W=new i.ZAu;W.position.set(-1800,-600,-480),e.scenes.general.add(W);const ee=be_any({schema:[[{coordinates:{x:0,y:0,z:0}},{coordinates:{x:10,y:0,z:0}},{coordinates:{x:10,y:10,z:0}},{coordinates:{x:0,y:10,z:0}},{coordinates:{x:0,y:20,z:0}},{coordinates:{x:10,y:20,z:0}}],[{coordinates:{x:15,y:20,z:0}},{coordinates:{x:15,y:0,z:0}},{coordinates:{x:25,y:0,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:15,y:20,z:0}}],[{coordinates:{x:30,y:20,z:0}},{coordinates:{x:30,y:0,z:0}},{coordinates:{x:40,y:0,z:0}}],[{coordinates:{x:45,y:20,z:0}},{coordinates:{x:45,y:0,z:0}},{coordinates:{x:55,y:0,z:0}},{coordinates:{x:55,y:20,z:0}}],[{coordinates:{x:60,y:20,z:0}},{coordinates:{x:70,y:20,z:0}}],[{coordinates:{x:65,y:20,z:0}},{coordinates:{x:65,y:0,z:0}}],[{coordinates:{x:75,y:0,z:0}},{coordinates:{x:75,y:20,z:0}}],[{coordinates:{x:80,y:0,z:0}},{coordinates:{x:90,y:0,z:0}},{coordinates:{x:90,y:20,z:0}},{coordinates:{x:80,y:20,z:0}},{coordinates:{x:80,y:0,z:0}}],[{coordinates:{x:95,y:0,z:0}},{coordinates:{x:95,y:20,z:0}},{coordinates:{x:105,y:0,z:0}},{coordinates:{x:105,y:20,z:0}}],[{coordinates:{x:120,y:20,z:0}},{coordinates:{x:110,y:20,z:0}},{coordinates:{x:110,y:10,z:0}},{coordinates:{x:120,y:10,z:0}},{coordinates:{x:120,y:0,z:0}},{coordinates:{x:110,y:0,z:0}}],[{coordinates:{x:75,y:22,z:0}},{coordinates:{x:75,y:22,z:0}}]],boundaries:{x:2050,y:200,z:300},frequency:111,tension:0}),ue=Object.keys(ee.group.y).sort((d,u)=>d-u).map(d=>ee.group.y[d]),ie=new i.ZAu;ie.position.set(-300,-600,-480),e.scenes.general.add(ie);const q=be_any({schema:[[{coordinates:{x:0,y:0,z:0}},{coordinates:{x:10,y:0,z:0}},{coordinates:{x:10,y:10,z:0}},{coordinates:{x:0,y:19,z:0}},{coordinates:{x:0,y:20,z:0}},{coordinates:{x:10,y:20,z:0}}],[{coordinates:{x:25,y:0,z:0}},{coordinates:{x:15,y:0,z:0}},{coordinates:{x:15,y:20,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:25,y:0,z:0}}],[{coordinates:{x:30,y:20,z:0}},{coordinates:{x:30,y:0,z:0}},{coordinates:{x:40,y:0,z:0}}],[{coordinates:{x:45,y:20,z:0}},{coordinates:{x:45,y:0,z:0}},{coordinates:{x:55,y:0,z:0}},{coordinates:{x:55,y:20,z:0}}],[{coordinates:{x:60,y:20,z:0}},{coordinates:{x:70,y:20,z:0}}],[{coordinates:{x:65,y:20,z:0}},{coordinates:{x:65,y:0,z:0}}],[{coordinates:{x:75,y:0,z:0}},{coordinates:{x:75,y:0,z:0}}],[{coordinates:{x:80,y:0,z:0}},{coordinates:{x:90,y:0,z:0}},{coordinates:{x:90,y:20,z:0}},{coordinates:{x:80,y:20,z:0}},{coordinates:{x:80,y:0,z:0}}],[{coordinates:{x:95,y:0,z:0}},{coordinates:{x:95,y:20,z:0}},{coordinates:{x:105,y:0,z:0}},{coordinates:{x:105,y:20,z:0}}],[{coordinates:{x:120,y:20,z:0}},{coordinates:{x:110,y:20,z:0}},{coordinates:{x:110,y:19,z:0}},{coordinates:{x:120,y:10,z:0}},{coordinates:{x:120,y:0,z:0}},{coordinates:{x:110,y:0,z:0}}]],boundaries:{x:2050,y:1200,z:300},frequency:55,tension:0}),ke=Object.keys(q.group.x).sort((d,u)=>u-d).map(d=>q.group.x[d]),de=new i.ZAu;de.position.set(-300,-750,-500),e.scenes.general.add(de);const ve=be_any({schema:[[{coordinates:{x:0,y:0,z:0}},{coordinates:{x:10,y:0,z:0}},{coordinates:{x:10,y:10,z:0}},{coordinates:{x:0,y:10,z:0}},{coordinates:{x:0,y:20,z:0}},{coordinates:{x:10,y:20,z:0}}],[{coordinates:{x:15,y:20,z:0}},{coordinates:{x:15,y:0,z:0}},{coordinates:{x:25,y:0,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:15,y:20,z:0}}],[{coordinates:{x:30,y:20,z:0}},{coordinates:{x:30,y:0,z:0}},{coordinates:{x:40,y:0,z:0}}],[{coordinates:{x:45,y:20,z:0}},{coordinates:{x:45,y:0,z:0}},{coordinates:{x:55,y:0,z:0}},{coordinates:{x:55,y:20,z:0}}],[{coordinates:{x:60,y:20,z:0}},{coordinates:{x:70,y:20,z:0}}],[{coordinates:{x:65,y:20,z:0}},{coordinates:{x:65,y:0,z:0}}],[{coordinates:{x:75,y:0,z:0}},{coordinates:{x:75,y:15,z:0}}],[{coordinates:{x:80,y:0,z:0}},{coordinates:{x:90,y:0,z:0}},{coordinates:{x:90,y:20,z:0}},{coordinates:{x:80,y:20,z:0}},{coordinates:{x:80,y:0,z:0}}],[{coordinates:{x:95,y:0,z:0}},{coordinates:{x:95,y:20,z:0}},{coordinates:{x:105,y:0,z:0}},{coordinates:{x:105,y:20,z:0}}],[{coordinates:{x:120,y:20,z:0}},{coordinates:{x:110,y:20,z:0}},{coordinates:{x:110,y:10,z:0}},{coordinates:{x:120,y:10,z:0}},{coordinates:{x:120,y:0,z:0}},{coordinates:{x:110,y:0,z:0}}]],boundaries:{x:2050,y:200,z:300},frequency:55,tension:0}),fe=Object.keys(ve.group.x).sort((d,u)=>u-d).map(d=>ve.group.x[d]),ae=new i.ZAu;ae.position.set(-300,400,-500),e.scenes.general.add(ae);const Te=be_any({schema:[[{coordinates:{x:0,y:0,z:0}},{coordinates:{x:10,y:0,z:0}},{coordinates:{x:10,y:10,z:0}},{coordinates:{x:0,y:10,z:0}},{coordinates:{x:0,y:20,z:0}},{coordinates:{x:10,y:20,z:0}}],[{coordinates:{x:15,y:20,z:0}},{coordinates:{x:15,y:0,z:0}},{coordinates:{x:25,y:0,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:15,y:20,z:0}}],[{coordinates:{x:30,y:20,z:0}},{coordinates:{x:30,y:0,z:0}},{coordinates:{x:40,y:0,z:0}}],[{coordinates:{x:45,y:20,z:0}},{coordinates:{x:45,y:0,z:0}},{coordinates:{x:55,y:0,z:0}},{coordinates:{x:55,y:20,z:0}}],[{coordinates:{x:60,y:20,z:0}},{coordinates:{x:70,y:20,z:0}}],[{coordinates:{x:65,y:20,z:0}},{coordinates:{x:65,y:0,z:0}}],[{coordinates:{x:75,y:0,z:0}},{coordinates:{x:75,y:15,z:0}}],[{coordinates:{x:80,y:0,z:0}},{coordinates:{x:90,y:0,z:0}},{coordinates:{x:90,y:20,z:0}},{coordinates:{x:80,y:20,z:0}},{coordinates:{x:80,y:0,z:0}}],[{coordinates:{x:95,y:0,z:0}},{coordinates:{x:95,y:20,z:0}},{coordinates:{x:105,y:0,z:0}},{coordinates:{x:105,y:20,z:0}}],[{coordinates:{x:120,y:20,z:0}},{coordinates:{x:110,y:20,z:0}},{coordinates:{x:110,y:10,z:0}},{coordinates:{x:120,y:10,z:0}},{coordinates:{x:120,y:0,z:0}},{coordinates:{x:110,y:0,z:0}}]],boundaries:{x:2050,y:200,z:300},frequency:55,tension:.1}),Pe=Object.keys(Te.group.y).sort((d,u)=>u-d).map(d=>Te.group.y[d]),me=new i.ZAu;me.position.set(-300,500,-500),e.scenes.general.add(me);const Me=be_any({schema:[[{coordinates:{x:0,y:17,z:0}},{coordinates:{x:0,y:3,z:0}}],[{coordinates:{x:0,y:10,z:0}},{coordinates:{x:15,y:10,z:0}}],[{coordinates:{x:10,y:20,z:0}},{coordinates:{x:10,y:0,z:0}}],[{coordinates:{x:15,y:20,z:0}},{coordinates:{x:15,y:0,z:0}},{coordinates:{x:25,y:0,z:0}},{coordinates:{x:25,y:20,z:0}},{coordinates:{x:15,y:20,z:0}}],[{coordinates:{x:25,y:20,z:0}},{coordinates:{x:35,y:20,z:0}}],[{coordinates:{x:30,y:20,z:0}},{coordinates:{x:30,y:0,z:0}}]],boundaries:{x:850,y:150,z:300},frequency:133,tension:0}),Ce=Object.keys(Me.group.x).sort((d,u)=>d-u).map(d=>Me.group.x[d]),oe=new i.ZAu;oe.position.set(-1800,500,-500),e.scenes.general.add(oe);let a=0;const m=setInterval(()=>{let d=N[a];if(!d)return clearInterval(m);d.forEach(u=>{const L=new i.BVQ(4,0,2,4),G=new i.vBJ({color:o,transparent:!0}),k=new i.Kj0(L,G);k.position.set(u.x,u.y,u.z),_.add(k),h.selectedObjects.push(k),z[0].changePosition({pos:[f[1],[u.x+-1800,u.y+-200,u.z+-480]]}),z[0].lMaterial.color=new i.Ilk(o)}),a++},55);let O=0;const B=setInterval(()=>{let d=j[O];if(!d)return clearInterval(B);d.forEach(u=>{if(u.y<=25)return;const L=new i.BVQ(4,0,2,4),G=new i.vBJ({color:o,transparent:!0}),k=new i.Kj0(L,G);k.position.set(u.x,u.y,u.z),$.add(k),h.selectedObjects.push(k),z[1].changePosition({pos:[f[1],[u.x+0,u.y+-200,u.z+-480]]}),z[1].lMaterial.color=new i.Ilk(o)}),O++},33);let Q=0;const ne=setInterval(()=>{let d=V[Q];if(!d)return clearInterval(ne);d.forEach(u=>{const L=new i.BVQ(4,0,2,4),G=new i.vBJ({color:"gray",transparent:!0}),k=new i.Kj0(L,G);k.position.set(u.x,u.y,u.z),W.add(k),h.selectedObjects.push(k),z[2].changePosition({pos:[f[1],[u.x+-1800,u.y+-600,u.z+-480]]}),z[2].lMaterial.color=new i.Ilk(o)}),Q++},111);let ye=0;const Ee=setInterval(()=>{let d=ue[ye];if(!d)return clearInterval(Ee);d.forEach(u=>{if(u.y>=20)return clearInterval(Ee);const L="burlywood",G=new i.BVQ(7,0,2,4),k=new i.vBJ({transparent:!0,color:L}),Ae=new i.Kj0(G,k);Ae.position.set(u.x,u.y,u.z),ie.add(Ae),z[3].changePosition({pos:[f[1],[u.x+-300,u.y+-600,u.z+-480]]}),z[3].lMaterial.color=new i.Ilk(L)}),ye++},55);let U=0;const Y=setInterval(()=>{let d=ke[U];if(!d)return clearInterval(Y);d.forEach(u=>{if(u.y>1300||u.x>1970)return;let L=u.x<=420?"violet":"brown";u.y<100&&(L="brown");let k,G=.2;if(u.x>1490&&(G=.5),u.x>=700&&u.x<1600){const Fe=new i.YT8([new i.Pa4(0,0,0),new i.Pa4(50,0,0)]).getPoints(2),Ze=(new i.u9r).setFromPoints(Fe),ht=new i.nls({color:L});k=new i.x12(Ze,ht)}else{const Fe=new i.BVQ(4,0,2,4),Ze=new i.vBJ({transparent:!0,color:L,opacity:G});k=new i.Kj0(Fe,Ze)}k.position.set(u.x,u.y,u.z),de.add(k),z[3].changePosition({pos:[f[1],[u.x+-300,u.y+-600,u.z+-480]]}),z[3].lMaterial.color=new i.Ilk(L)}),U++},55);let Re=0;const De=setInterval(()=>{let d=fe[Re];if(!d)return clearInterval(De);d.forEach(u=>{if(u.x<=130||u.x>=2e3||u.y<=120)return;const G=new i.YT8([new i.Pa4(0,0,0),new i.Pa4(0,70,0)]).getPoints(2),k=(new i.u9r).setFromPoints(G),Ae=new i.nls({color:"brown"}),Fe=new i.x12(k,Ae);Fe.position.set(u.x,u.y,u.z),ae.add(Fe),z[3].changePosition({pos:[f[1],[u.x+-300,u.y+-600,u.z+-480]]}),z[3].lMaterial.color=new i.Ilk(o)}),Re++},55);let Oe=0;const ut=setInterval(()=>{let d=Pe[Oe];if(!d)return clearInterval(ut);d.forEach(u=>{if(u.y<=180)return;const L=new i.BVQ(7,0,2,4),G=new i.vBJ({transparent:!0,color:"burlywood"}),k=new i.Kj0(L,G);k.position.set(u.x,u.y,u.z),h.selectedObjects.push(k),me.add(k),z[3].changePosition({pos:[f[1],[u.x+-300,u.y+-600,u.z+-480]]}),z[3].lMaterial.color=new i.Ilk(o)}),Oe++},33);let $e=0;const dt=setInterval(()=>{let d=Ce[$e];if(!d)return clearInterval(dt);d.forEach(u=>{if(u.y<=90||u.x>=700)return;const L=new i.BVQ(5,0,2,4),G=new i.vBJ({transparent:!0,color:"brown"});G.opacity=.7;const k=new i.Kj0(L,G);k.position.set(u.x,u.y,u.z),oe.add(k),z[3].changePosition({pos:[f[1],[u.x+-300,u.y+-600,u.z+-480]]}),z[3].lMaterial.color=new i.Ilk(o)}),$e++},33);setTimeout(()=>{const d=new i.ZAu;h.selectedObjects.push(p),d.add(p)},7e3),setTimeout(()=>{const d=new i.ZAu;d.add(b.group),d.position.set(-1350,100,0)},5e3),setTimeout(()=>{const d=new i.ZAu;d.add(C.group),d.position.set(-2200,0,0),e.scenes.general.add(d),setTimeout(()=>{e.scenes.general.remove(d)},6e3)},.2),setTimeout(()=>{z.forEach(d=>{e.scenes.general.remove(d.group)})},12500),setTimeout(()=>{e.scenes.general.add(x.group)},.1),setInterval(()=>{const d=Z.getRandomFromArray({array:r});p.material.color=new i.Ilk(d)},150),setInterval(()=>{const d=Z.getRandomFromArray({array:r});b.lMaterial.color=new i.Ilk(d)},50),globalThis.removeEventListener("resize",t),globalThis.addEventListener("resize",t),e.cameras.general.position.z=2800,new ot(e.cameras.general,e.renderer.domElement);const et={draw(){e.animationId=globalThis.requestAnimationFrame(et.draw),z.forEach(d=>{d.animate({time:e.time})}),v.animate({time:e.time}),C.animate({time:e.time}),b.animate({time:e.time}),x.animate({time:e.time}),x.group.rotation.z=.15*e.time,e.time+=e.config.timeRate*e.clock.getDelta(),e.composer.render()},stop(){globalThis.cancelAnimationFrame(e.animationId)}};return et}}}]);